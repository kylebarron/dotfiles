# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.python':
  'header':
    'prefix': 'header'
    'body':
      """#! /usr/bin/env python3
      \"\"\"
      ---------------------------------------------------------------------
      Project: ${1:Project Name}
      Program: ${2:01process}.py
      Author:  Kyle Barron <barronk@mit.edu>
      Created: ${3:ctrl-shift-alt-T}
      Updated: ${3:ctrl-shift-alt-T}
      Purpose: ${4:Process data}
      Depends: data/${5:base}
          ${6:dataset.csv}
      Output:  data/${7:final}
          ${8:final.feather}
      \"\"\"
      
      $9"""
'.source.shell':
  'header':
    'prefix': 'header'
    'body':
      """#! /usr/bin/env bash
      # Project: ${1:Project Name}
      # Program: ${2:01process}.sh
      # Author:  Kyle Barron <barronk@mit.edu>
      # Created: ${3:ctrl-shift-alt-T}
      # Purpose: ${4:Process data}
      # Depends: data/${5:base}
      # Output:  data/${6:final}

      $7"""
'.source.stata':
  'do file header':
    'prefix': 'header'
    'body':
      """/* ---------------------------------------------------------------------
      @Project: ${1:Project Name}
      @Program: ${2:01process}.do
      @Author:  Kyle Barron <barronk@mit.edu>
      @Created: ${3:ctrl-shift-alt-T}
      @Updated: ${3:ctrl-shift-alt-T}
      @Purpose: ${4:Process data into clean .dta files}
      @Depends: data/${5:base}
              ${6:dataset.dta}
      @Output:  data/${7:final}
              ${8:final.dta}
      */

      * Stata start-up options
      * ----------------------

      version 14
      clear all
      set more off
      set varabbrev off
      capture log close _all
      qui do "00preamble.do"

      * Main program wrapper
      * --------------------

      cap program drop main
      program main
          syntax, [CAPture NOIsily email]

          * Set up
          * ------

          local  progname "${1:Project Name}/dofiles/${2:01process}"
          local  start_time "$S_TIME $S_DATE"
          di "Start: `start_time'"

          * Run the things
          * --------------

          `capture' `noisily' {
              program_name
          }
          local rc = _rc

          * If requested, notify via e-mail
          * -------------------------------

          if ("`email'" != "") {
              mail_notify,  rc(`rc')             ///
                  email("`c(username)'@mit.edu") ///
                  progname(`progname')           ///
                  start_time(`start_time') `capture'
          }
          exit `rc'
      end

      $9"""
  'main program definition':
    'prefix': 'main'
    'body':
      """* Main program wrapper
      * --------------------

      program main
          syntax, [CAPture NOIsily email]

          * Set up
          * ------

          local  progname ${1:project/dofiles/01process}
          local  start_time "$S_TIME $S_DATE"
          di "Start: `start_time'"

          * Run the things
          * --------------

          `capture' `noisily' {
              program_name
          }
          local rc = _rc

          * If requested, notify via e-mail
          * -------------------------------

          if ("`email'" != "") {
              mail_notify,  rc(`rc')             ///
                  email("`c(username)'@mit.edu") ///
                  progname(`progname')           ///
                  start_time(`start_time') `capture'
          }
          exit `rc'
      end

      $2"""
'.source.r':
  'header':
    'prefix': 'header'
    'body':
      """#! /usr/bin/env Rscript
      #' @Project: ${1:Project Name}
      #' @Program: ${2:01process}.R
      #' @Author:  Kyle Barron <barronk@mit.edu>
      #' @Created: ${3:ctrl-shift-alt-T}
      #' @Updated: ${3:ctrl-shift-alt-T}
      #' @Purpose: ${4:Process data into clean .feather files}
      #' @Depends: ${5:data/base}
      #'      ${6:dataset.feather}
      #' @Output:  ${7:data/final}
      #'      ${8:final.feather}

      $9"""
'.text.md':
  'event':
    'prefix': 'event'
    'body':
      """**Event: ${1:Event description}**
      Date: ${2: ctrl-shift-alt-T}
      Note: $3
      """
  'people-call':
    'prefix': 'people'
    'body':
      """${1:Person Name}

              email:       $2
              institution: $3
              role:        $4
              notes:       $5
          
          $6
      """
