# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'*':
  'people-call':
    'prefix': 'people'
    'body': 
      """${1:Person Name}

              email:       $2
              institution: $3
              role:        $4
              notes:       $5
          
          $6
      """

'.source.stata':
  'do file header':
    'prefix': 'header'
    'body': """/* ---------------------------------------------------------------------
      Project: ${1:RCT Geisinger - Base Data}
      Program: ${2:01process.do}
      Author:  Kyle Barron <barronk@mit.edu>
      Created: ${3:ctrl-shift-alt-T}
      Updated: ${4:ctrl-shift-alt-T}
      Purpose: ${5:Process data into clean .dta files}
      Depends: ${6:data/base}
                   demographic.dta
                   encounter.dta
                   findings.dta
      Output:  ${7:output-datas..:tab}
      Stata start-up options
      ----------------------
      */

      version 13
      clear all
      set varabbrev off
      capture log close _all
      qui do "00preamble.do"


      ${8:main:tab}"""
  'output-datasets':
    'prefix': 'output-datasets'
    'body': """${1:data/pl}
    *              ${2:hba1c_index_encounter}
    *               variables: $3
    *               level of observation: $4
    *          $5
    """
  'main program definition':
    'prefix': 'main'
    'body': """program main
        syntax, [CAPture NOIsily email]

        * Set up
        * ------

        local  progname ${1:rct-geisinger/code/01base/01get}
        local  start_time "$S_TIME $S_DATE"
        di "Start: `start_time'"

        * Run the things
        * --------------

        cap mkdir ${2:$datadir/base}
        `capture' `noisily' {
            ${3:get_csv}
        }
        local rc = _rc

        * If requested, notify via e-mail
        * -------------------------------

        if ("`email'" != "") {
            mail_notify,  rc(`rc')           ///
                email(`c(username)'@mit.edu) ///
                progname(`progname')         ///
                start_time(`start_time') `capture'
        }
        exit `rc'
    end

    $4"""
'text.md':
  'people-call':
    'prefix': 'people'
    'body': 
      """${1:Person Name}

          email:       $2
          institution: $3
          role:        $4
          notes:       $5
      """

'.source.r':
  'header':
    'prefix': 'header'
    'body': """/* ---------------------------------------------------------------------
      Project: ${1:RCT Geisinger - Base Data}
      Program: ${2:01process.do}
      Author:  Kyle Barron <barronk@mit.edu>
      Created: ${3:ctrl-shift-alt-T}
      Updated: ${4:ctrl-shift-alt-T}
      Purpose: ${5:Process data into clean .dta files}
      Depends: ${6:data/base}
                   demographic.dta
                   encounter.dta
                   findings.dta
      Output:  ${7:output-datas..:tab}
      Stata start-up options
      ----------------------
      */

      version 13
      clear all
      set varabbrev off
      capture log close _all
      qui do "00preamble.do"


      ${8:main:tab}"""
